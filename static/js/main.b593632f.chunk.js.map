{"version":3,"sources":["components/songList.js","actions/index.js","components/songDetail.js","components/App.js","reducers/index.js","index.js"],"names":["SongList","_this","this","props","songs","map","song","react_default","a","createElement","className","key","title","onClick","selectSongs","renderList","Component","connect","state","type","payload","selectedSongs","_ref","src","cover","duration","url","controls","id","App","style","marginTop","songList","songDetail","combineReducers","arguments","length","undefined","action","ReactDOM","render","es","store","createStore","reducers","components_App","document","querySelector"],"mappings":"8NAIMA,uLACW,IAAAC,EAAAC,KACT,OAAOA,KAAKC,MAAMC,MAAMC,IAAI,SAACC,GACzB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOC,IAAKL,EAAKM,OAC5BL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAAA,UACIC,UAAU,oBACVG,QAAU,kBAAMZ,EAAKE,MAAMW,YAAYR,KAF3C,WAOJC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAKM,2CAO3C,OACIL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACVR,KAAKa,qBAtBCC,aAgCRC,cAJS,SAAAC,GACpB,MAAO,CAAEd,MAAOc,EAAMd,QAGe,CAAEU,YClChB,SAAAR,GAEvB,MAAO,CACHa,KAAM,gBACNC,QAASd,KD8BFW,CAA4CjB,GEV5CiB,cAJS,SAAAC,GACpB,MAAO,CAAEZ,KAAMY,EAAMG,gBAGVJ,CAtBI,SAAAK,GAAc,IAAXhB,EAAWgB,EAAXhB,KAClB,OAAKA,EAIDC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,OAAKc,IAAKjB,EAAKkB,QACfjB,EAAAC,EAAAC,cAAA,mBACUH,EAAKM,MACbL,EAAAC,EAAAC,cAAA,WAFF,aAGaH,EAAKmB,UAElBlB,EAAAC,EAAAC,cAAA,SAAOc,IAAKjB,EAAKoB,IAAKC,UAAQ,EAAChB,IAAKL,EAAKsB,MAXtCrB,EAAAC,EAAAC,cAAA,gCCcAoB,EAhBH,WACR,OACItB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoBoB,MAAS,CAAEC,UAAW,SACrDxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAACuB,EAAD,OAEJzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAACwB,EAAD,UCMLC,cAAgB,CAC3B9B,MAjBkB,WAClB,MAAO,CACH,CAAEwB,GAAI,IAAKhB,MAAO,SAAUa,SAAU,OAAQC,IAAK,iEAAkEF,MAAO,0DAC5H,CAAEI,GAAI,IAAKhB,MAAO,iBAAea,SAAU,OAAQC,IAAK,mEAAoEF,MAAO,0DACnI,CAAEI,GAAI,IAAKhB,MAAO,sCAAuCa,SAAU,OAAQC,IAAK,sEAAuEF,MAAO,qEAC9J,CAAEI,GAAI,IAAKhB,MAAO,eAAgBa,SAAU,OAAQC,IAAK,0EAA2EF,MAAO,iEAa/IH,cATwB,WAAkC,IAAjCA,EAAiCc,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjB,KAAMG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC1D,MAAoB,kBAAhBC,EAAOnB,KACAmB,EAAOlB,QAEXC,KCRXkB,IAASC,OACLjC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAUC,MAAOC,YAAYC,IACzBrC,EAAAC,EAAAC,cAACoC,EAAD,OAEJC,SAASC,cAAc","file":"static/js/main.b593632f.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { selectSongs } from '../actions'\r\n\r\nclass SongList extends Component {\r\n    renderList() {\r\n        return this.props.songs.map((song) => {\r\n            return (\r\n                <div className=\"item\" key={song.title}>\r\n                    <div className=\"right floated content\">\r\n                        <button \r\n                            className=\"ui button primary\"\r\n                            onClick={ () => this.props.selectSongs(song) }\r\n                        >\r\n                            Select\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"content\">{song.title}</div>\r\n                </div>\r\n            );\r\n        });\r\n    }\r\n    render() {\r\n        \r\n        return (\r\n            <div className=\"ui divided list\">\r\n                {this.renderList()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { songs: state.songs };\r\n}\r\n\r\nexport default connect( mapStateToProps, { selectSongs } )(SongList);","//Action creator\r\n\r\nexport const selectSongs = song => {\r\n    // Return an action\r\n    return {\r\n        type: 'SONG_SELECTED',\r\n        payload: song\r\n    };\r\n};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport songList from './songList';\r\n\r\nconst SongDetail = ({ song }) => {\r\n    if (!song) {\r\n        return <div> Select a song </div>\r\n    }\r\n    return (\r\n        <div>\r\n            <h3>Detail for:</h3>\r\n            <img src={song.cover} />\r\n            <p>\r\n              Title: {song.title}\r\n              <br />\r\n              Duration: {song.duration}\r\n            </p>\r\n            <audio src={song.url} controls key={song.id} />\r\n        </div>\r\n    );  \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { song: state.selectedSongs }\r\n};\r\n\r\nexport default connect(mapStateToProps)(SongDetail);\r\n\r\n\r\n","import React from 'react';\r\nimport SongList from './songList';\r\nimport SongDetaile from './songDetail';\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"ui container grid\" style = {{ marginTop: '10px' }}>\r\n            <div className=\"ui row\">\r\n                <div className=\"column eight wide\">\r\n                    <SongList />\r\n                </div>\r\n                <div className=\"column eight wide\">\r\n                    <SongDetaile />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\n\r\nconst songsReducers = () => {\r\n    return [\r\n        { id: '1', title: 'Angels', duration: '7:37', url: 'http://www.global-journey.com/MP3-Samples/Free-25/Epiphany.mp3', cover: 'http://www.global-journey.com/images/cd-new-angels.jpg' },\r\n        { id: '2', title: 'CafÃ© Brasil', duration: '5:30', url: 'http://www.global-journey.com/MP3-Samples/Free-25/Rio-Sunset.mp3', cover: 'http://www.global-journey.com/images/cd-cafebrasil.jpg' },\r\n        { id: '3', title: 'South American Pan Pipes by the Sea', duration: '8:00', url: 'http://www.global-journey.com/MP3-Samples/Free-25/Clara-De-Luna.mp3', cover: 'http://www.global-journey.com/images/cd-world-southameripanpi.jpg' },\r\n        { id: '4', title: 'Fairy Garden', duration: '5:52', url: 'http://www.global-journey.com/MP3-Samples/Free-25/Tinkerbells-Dance.mp3', cover: 'http://www.global-journey.com/images/cd-new-fairygarden.jpg' },\r\n    ]\r\n}\r\n\r\nconst selectedSongReducer = (selectedSongs = null, action) => {\r\n    if (action.type === 'SONG_SELECTED') {\r\n        return action.payload;\r\n    }\r\n    return selectedSongs;\r\n};\r\n\r\nexport default combineReducers({\r\n    songs: songsReducers,\r\n    selectedSongs: selectedSongReducer\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nReactDOM.render(\r\n    <Provider store={createStore(reducers)}>\r\n        <App />\r\n    </Provider>,\r\n    document.querySelector(\"#root\")\r\n);"],"sourceRoot":""}